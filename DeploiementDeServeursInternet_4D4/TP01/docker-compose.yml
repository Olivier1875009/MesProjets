# ------------------------------------------------
# Projet:   TP01
# Cours:    420-4D4
# Fichier:  docker-compose.yml - version de départ
# Auteur:   Olivier Bourgault
# Date:     2023-03-15
# ------------------------------------------------
# Description:  Fichier docker-compose.yml qui va
#               automatiser le démarrage d'une
#               application multi-services composé
#               de deux réseaux, un site Web
#               principal, deux systèmes de gestion
#               de bases de données (SGBD) mariaDB
#               et postgreSQL, phpMyAdmin, Wordpress
#               (avec un thème et un plugin personnalisés),
#               postgresAdmin, percona PMM et un client
#               percona PMM pour postgres.
# ------------------------------------------------
# M-A-J: 22 mars 2023
version: "3.9"
services:
  # ===========================================
  # Le serveur de bases de données mariaDB
  # # Service disponible sur le port 3307
  # ===========================================
  mariabd:
    container_name: mariabd
    image: mariadb
    ports:
      - 3307:3306
    volumes:
      - ./bdwp:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    networks:
      - reseauWP
  # <-------------------------------------- FIN

  # ==============================================
  # Construction et démarrage du serveur Web,
  # à partir des fichiers du dossier 'contenu-web'
  # # Service disponible sur le port 80
  # ==============================================
  serveurWeb:
    container_name: TP01
    image: nginx
    build: ./contenu-web
    ports:
      - 80:80
    networks:
      - reseauWP
  # <-------------------------------------- FIN

  # ===========================================
  # Construction et démarrage de WordPress
  # Service disponible sur le port 88
  # ===========================================

  # Exemple d'utilisation des variables du fichier .env
  #    environment:
  #      - WORDPRESS_DB_HOST=${WP_HOST}
  #      - WORDPRESS_DB_USER=${WP_USER}
  #      - WORDPRESS_DB_PASSWORD=${WP_PASSWORD}
  #      - WORDPRESS_DB_NAME=${WP_DB_NAME}
  wordpress:
    container_name: wordpress
    image: wordpress
    build: ./wordpress
    depends_on:
      - mariabd
    volumes:
      - ./wordpress:/var/www/html
    ports:
      - 88:80
    environment:
      - WORDPRESS_DB_HOST=${WP_HOST}
      - WORDPRESS_DB_USER=${WP_USER}
      - WORDPRESS_DB_PASSWORD=${WP_PASSWORD}
      - WORDPRESS_DB_NAME=${WP_DB_NAME}
    networks:
      - reseauWP
  # <-------------------------------------- FIN

  # ---- ZONE postgres + PMM
  # ===========================================
  # Le serveur d'activités percona PMM
  # Service disponible sur le port 83
  # ===========================================
  serveur-pmm:
    container_name: serveur-pmm
    image: percona/pmm-server
    environment:
      - SERVER_USER=${PMM_USER}
      - SERVER_PASSWORD=${PMM_PASS}
    ports:
      - 83:80
    networks:
      - reseauPMM
  # <-------------------------------------- FIN

  # ===========================================
  # Le serveur de base de données postgres
  # Service disponible sur le port 5432
  # ===========================================
  postgres:
    container_name: postgres
    image: postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - 5432:5432
    networks:
      - reseauPMM
  # <-------------------------------------- FIN

  # ===========================================
  # Démarrage de postgresAdmin
  # Service disponible sur le port 81
  # ===========================================
  pgAdmin:
    container_name: pg-admin
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - 81:80
    depends_on:
      - postgres
    networks:
      - reseauPMM
  # <-------------------------------------- FIN

  # ================================================
  # Le client PMM pour la base de données postgress
  # ATTENTION:  Cette solution ne fonctionne pas!!!
  # À vous de trouver la bonne solution ...+
  # ================================================
  pmm-client:
    container_name: pmm-client-postgres
    image: "perconalab/pmm-client"
      # Voici les variables nécessaires au fonctionnement du client PMM
    environment:
      - PMM_SERVER=serveur-pmm:443
      - PMM_USER=${PMM_USER}
      - PMM_PASSWORD=${PMM_PASS}
      - DB_TYPE=postgresql
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
    depends_on:
      - serveur-pmm
      - postgres
    networks:
      - reseauPMM
  # <-------------------------------------- FIN

  # ===========================================
  # Démarrage de phpMyAdmin
  # Service disponible sur le port 82
  # ===========================================
  # NOTE: Il ne faut pas utiliser la méthode: PMA_ARBITRARY=1
  phpmyadmin:
    container_name: phpmyadmin
    image: phpmyadmin
    ports:
      - 82:80
    depends_on:
      - mariabd
    environment:
      - PMA_HOST=mariabd:3306
      - PMA_ARBITRARY=1
    networks:
      - reseauWP
  # <-------------------------------------- FIN

  # ===========================================
  # Les réseaux de l'application
  # ===========================================
networks:
  reseauWP:
    name: reseauWP
    driver: bridge
  reseauPMM:
    name: reseauPMM
    driver: bridge
# <-------------------------------------- FIN