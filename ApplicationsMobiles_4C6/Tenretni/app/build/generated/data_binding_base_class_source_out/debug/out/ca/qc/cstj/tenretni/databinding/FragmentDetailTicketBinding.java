// Generated by view binder compiler. Do not edit!
package ca.qc.cstj.tenretni.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Group;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import ca.qc.cstj.tenretni.R;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentDetailTicketBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnInstallTicket;

  @NonNull
  public final Button btnOpenTicket;

  @NonNull
  public final Button btnSolveTicket;

  @NonNull
  public final FloatingActionButton fabTicketClientLocation;

  @NonNull
  public final Group grpBtnTicket;

  @NonNull
  public final ItemTicketBinding iclTicketItem;

  @NonNull
  public final ImageView imvTicketClientFlag;

  @NonNull
  public final RecyclerView rcvTicketClientGateways;

  @NonNull
  public final TextView txvTicketClientAdress;

  @NonNull
  public final TextView txvTicketClientGatewaysStats;

  @NonNull
  public final TextView txvTicketClientName;

  @NonNull
  public final TextView txvTicketClientTown;

  @NonNull
  public final TextView txvTicketDetailGateways;

  private FragmentDetailTicketBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button btnInstallTicket, @NonNull Button btnOpenTicket,
      @NonNull Button btnSolveTicket, @NonNull FloatingActionButton fabTicketClientLocation,
      @NonNull Group grpBtnTicket, @NonNull ItemTicketBinding iclTicketItem,
      @NonNull ImageView imvTicketClientFlag, @NonNull RecyclerView rcvTicketClientGateways,
      @NonNull TextView txvTicketClientAdress, @NonNull TextView txvTicketClientGatewaysStats,
      @NonNull TextView txvTicketClientName, @NonNull TextView txvTicketClientTown,
      @NonNull TextView txvTicketDetailGateways) {
    this.rootView = rootView;
    this.btnInstallTicket = btnInstallTicket;
    this.btnOpenTicket = btnOpenTicket;
    this.btnSolveTicket = btnSolveTicket;
    this.fabTicketClientLocation = fabTicketClientLocation;
    this.grpBtnTicket = grpBtnTicket;
    this.iclTicketItem = iclTicketItem;
    this.imvTicketClientFlag = imvTicketClientFlag;
    this.rcvTicketClientGateways = rcvTicketClientGateways;
    this.txvTicketClientAdress = txvTicketClientAdress;
    this.txvTicketClientGatewaysStats = txvTicketClientGatewaysStats;
    this.txvTicketClientName = txvTicketClientName;
    this.txvTicketClientTown = txvTicketClientTown;
    this.txvTicketDetailGateways = txvTicketDetailGateways;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentDetailTicketBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentDetailTicketBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_detail_ticket, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentDetailTicketBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnInstallTicket;
      Button btnInstallTicket = ViewBindings.findChildViewById(rootView, id);
      if (btnInstallTicket == null) {
        break missingId;
      }

      id = R.id.btnOpenTicket;
      Button btnOpenTicket = ViewBindings.findChildViewById(rootView, id);
      if (btnOpenTicket == null) {
        break missingId;
      }

      id = R.id.btnSolveTicket;
      Button btnSolveTicket = ViewBindings.findChildViewById(rootView, id);
      if (btnSolveTicket == null) {
        break missingId;
      }

      id = R.id.fabTicketClientLocation;
      FloatingActionButton fabTicketClientLocation = ViewBindings.findChildViewById(rootView, id);
      if (fabTicketClientLocation == null) {
        break missingId;
      }

      id = R.id.grpBtnTicket;
      Group grpBtnTicket = ViewBindings.findChildViewById(rootView, id);
      if (grpBtnTicket == null) {
        break missingId;
      }

      id = R.id.iclTicketItem;
      View iclTicketItem = ViewBindings.findChildViewById(rootView, id);
      if (iclTicketItem == null) {
        break missingId;
      }
      ItemTicketBinding binding_iclTicketItem = ItemTicketBinding.bind(iclTicketItem);

      id = R.id.imvTicketClientFlag;
      ImageView imvTicketClientFlag = ViewBindings.findChildViewById(rootView, id);
      if (imvTicketClientFlag == null) {
        break missingId;
      }

      id = R.id.rcvTicketClientGateways;
      RecyclerView rcvTicketClientGateways = ViewBindings.findChildViewById(rootView, id);
      if (rcvTicketClientGateways == null) {
        break missingId;
      }

      id = R.id.txvTicketClientAdress;
      TextView txvTicketClientAdress = ViewBindings.findChildViewById(rootView, id);
      if (txvTicketClientAdress == null) {
        break missingId;
      }

      id = R.id.txvTicketClientGatewaysStats;
      TextView txvTicketClientGatewaysStats = ViewBindings.findChildViewById(rootView, id);
      if (txvTicketClientGatewaysStats == null) {
        break missingId;
      }

      id = R.id.txvTicketClientName;
      TextView txvTicketClientName = ViewBindings.findChildViewById(rootView, id);
      if (txvTicketClientName == null) {
        break missingId;
      }

      id = R.id.txvTicketClientTown;
      TextView txvTicketClientTown = ViewBindings.findChildViewById(rootView, id);
      if (txvTicketClientTown == null) {
        break missingId;
      }

      id = R.id.txvTicketDetailGateways;
      TextView txvTicketDetailGateways = ViewBindings.findChildViewById(rootView, id);
      if (txvTicketDetailGateways == null) {
        break missingId;
      }

      return new FragmentDetailTicketBinding((ConstraintLayout) rootView, btnInstallTicket,
          btnOpenTicket, btnSolveTicket, fabTicketClientLocation, grpBtnTicket,
          binding_iclTicketItem, imvTicketClientFlag, rcvTicketClientGateways,
          txvTicketClientAdress, txvTicketClientGatewaysStats, txvTicketClientName,
          txvTicketClientTown, txvTicketDetailGateways);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
