// Generated by view binder compiler. Do not edit!
package ca.qc.cstj.tenretni.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.Group;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import ca.qc.cstj.tenretni.R;
import com.google.android.material.chip.Chip;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemGatewayBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final Chip chpGatewayStatus;

  @NonNull
  public final Guideline gdlGatewayItemDown;

  @NonNull
  public final Guideline gdlGatewayItemUp;

  @NonNull
  public final Group grpDetailGatewayStats;

  @NonNull
  public final ImageView imvGatewayDownload;

  @NonNull
  public final ImageView imvGatewaySignal;

  @NonNull
  public final ImageView imvGatewayUpload;

  @NonNull
  public final TextView txvGatewayConnectionDownloadValue;

  @NonNull
  public final TextView txvGatewayConnectionPing;

  @NonNull
  public final TextView txvGatewayConnectionUploadValue;

  @NonNull
  public final TextView txvGatewaySerialNumber;

  @NonNull
  public final TextView txvGatewayStats;

  private ItemGatewayBinding(@NonNull CardView rootView, @NonNull Chip chpGatewayStatus,
      @NonNull Guideline gdlGatewayItemDown, @NonNull Guideline gdlGatewayItemUp,
      @NonNull Group grpDetailGatewayStats, @NonNull ImageView imvGatewayDownload,
      @NonNull ImageView imvGatewaySignal, @NonNull ImageView imvGatewayUpload,
      @NonNull TextView txvGatewayConnectionDownloadValue,
      @NonNull TextView txvGatewayConnectionPing, @NonNull TextView txvGatewayConnectionUploadValue,
      @NonNull TextView txvGatewaySerialNumber, @NonNull TextView txvGatewayStats) {
    this.rootView = rootView;
    this.chpGatewayStatus = chpGatewayStatus;
    this.gdlGatewayItemDown = gdlGatewayItemDown;
    this.gdlGatewayItemUp = gdlGatewayItemUp;
    this.grpDetailGatewayStats = grpDetailGatewayStats;
    this.imvGatewayDownload = imvGatewayDownload;
    this.imvGatewaySignal = imvGatewaySignal;
    this.imvGatewayUpload = imvGatewayUpload;
    this.txvGatewayConnectionDownloadValue = txvGatewayConnectionDownloadValue;
    this.txvGatewayConnectionPing = txvGatewayConnectionPing;
    this.txvGatewayConnectionUploadValue = txvGatewayConnectionUploadValue;
    this.txvGatewaySerialNumber = txvGatewaySerialNumber;
    this.txvGatewayStats = txvGatewayStats;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemGatewayBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemGatewayBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_gateway, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemGatewayBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.chpGatewayStatus;
      Chip chpGatewayStatus = ViewBindings.findChildViewById(rootView, id);
      if (chpGatewayStatus == null) {
        break missingId;
      }

      id = R.id.gdlGatewayItemDown;
      Guideline gdlGatewayItemDown = ViewBindings.findChildViewById(rootView, id);
      if (gdlGatewayItemDown == null) {
        break missingId;
      }

      id = R.id.gdlGatewayItemUp;
      Guideline gdlGatewayItemUp = ViewBindings.findChildViewById(rootView, id);
      if (gdlGatewayItemUp == null) {
        break missingId;
      }

      id = R.id.grpDetailGatewayStats;
      Group grpDetailGatewayStats = ViewBindings.findChildViewById(rootView, id);
      if (grpDetailGatewayStats == null) {
        break missingId;
      }

      id = R.id.imvGatewayDownload;
      ImageView imvGatewayDownload = ViewBindings.findChildViewById(rootView, id);
      if (imvGatewayDownload == null) {
        break missingId;
      }

      id = R.id.imvGatewaySignal;
      ImageView imvGatewaySignal = ViewBindings.findChildViewById(rootView, id);
      if (imvGatewaySignal == null) {
        break missingId;
      }

      id = R.id.imvGatewayUpload;
      ImageView imvGatewayUpload = ViewBindings.findChildViewById(rootView, id);
      if (imvGatewayUpload == null) {
        break missingId;
      }

      id = R.id.txvGatewayConnectionDownloadValue;
      TextView txvGatewayConnectionDownloadValue = ViewBindings.findChildViewById(rootView, id);
      if (txvGatewayConnectionDownloadValue == null) {
        break missingId;
      }

      id = R.id.txvGatewayConnectionPing;
      TextView txvGatewayConnectionPing = ViewBindings.findChildViewById(rootView, id);
      if (txvGatewayConnectionPing == null) {
        break missingId;
      }

      id = R.id.txvGatewayConnectionUploadValue;
      TextView txvGatewayConnectionUploadValue = ViewBindings.findChildViewById(rootView, id);
      if (txvGatewayConnectionUploadValue == null) {
        break missingId;
      }

      id = R.id.txvGatewaySerialNumber;
      TextView txvGatewaySerialNumber = ViewBindings.findChildViewById(rootView, id);
      if (txvGatewaySerialNumber == null) {
        break missingId;
      }

      id = R.id.txvGatewayStats;
      TextView txvGatewayStats = ViewBindings.findChildViewById(rootView, id);
      if (txvGatewayStats == null) {
        break missingId;
      }

      return new ItemGatewayBinding((CardView) rootView, chpGatewayStatus, gdlGatewayItemDown,
          gdlGatewayItemUp, grpDetailGatewayStats, imvGatewayDownload, imvGatewaySignal,
          imvGatewayUpload, txvGatewayConnectionDownloadValue, txvGatewayConnectionPing,
          txvGatewayConnectionUploadValue, txvGatewaySerialNumber, txvGatewayStats);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
